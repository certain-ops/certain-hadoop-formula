# This formula requires an SDB store that is common to all boxes. Initialization
# of the hadoop cluster requires dynamic configuration and requires each node
# the cluster to know where the managers are. These values are kept in SDB. 
#
# The following pillar configures a Zookeeper SDB store and the Salt mine via
# the Salt formula.
# https://github.com/saltstack-formulas/salt-formula
salt:
  minion:

    # Configure a Zookeeper SDB interface to store NameNode and ResourceManager
    # connection strings
    hadoop:
      driver: zookeeper
      hosts:
        - 10.0.1.3

# Hadoop settings
# 
# Many settings are merged with their more specific counter parts. In the
# contrived pillar example below, JAVA_HOME is specified under hadoop,
# hadoop.hdfs, and hadoop.hdfs.name_node. These will be merged such in the
# following way.
#
# | Service         | JAVA_HOME                   |
# ------------------------------------------------
# | NameNode        | /hadoop/hdfs/name_node/java |
# | DataNode        | /hadoop/hdfs/java           |
# | ResourceManager | /hadoop/java                |
# | NodeManager     | /hadoop/java                |
#

hadoop:
  version: 3.0.0

  environment:
    JAVA_HOME: /hadoop/java
  hdfs:
    environment:
      JAVA_HOME: /hadoop/hdfs/java
    name_node: 

      # Define which node is the NameNode
      target: 'roles:name_node'
      target_type: grain

      # The NameNode endpoint will be stored in SDB. This parameter defines the
      # grain used.
      endpoint_grain:

      environment:
        JAVA_HOME: /hadoop/hdfs/name_node/java

      # The following configuration parameters are part of hdfs-site.xml on the
      # NameNode
      config:

        # The NameNode trys to perform a reverse DNS lookup of DataNodes and
        # treats failure as fatal by default
        dfs.namenode.datanode.registration.ip-hostname-check: 'false'

  # Modify any log4j properties. See defaults in hadoop/defaults/log4j.yaml
  log4j.properties:
    hadoop.root.logger: 'DEBUG,console'
